kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: docker-registry
provisioner: kubernetes.io/no-provisioner
# WaitForFirstConsumer mode delays the binding and provisioning of a
# PersistentVolume until a Pod using the PersistentVolumeClaim is created.
#
# Delaying volume binding ensures that the PersistentVolumeClaim binding
# decision will also be evaluated with any other node constraints the Pod may
# have, such as node resource requirements, node selectors, Pod affinity, and Pod
# anti-affinity.

# https://kubernetes.io/docs/concepts/storage/volumes/#local
# https://kubernetes.io/docs/concepts/storage/storage-classes/#local
# https://kubernetes.io/docs/concepts/storage/storage-classes/#volume-binding-mode

volumeBindingMode: WaitForFirstConsumer
---

# Manually creating the Persistent Volume for now, consider replacing with
# local static provisioner to auto discover mounted disks and create persistent volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: docker-registry-pv
  labels:
    fs-uuid: "07db1e5c-03eb-4e08-b02e-9bc04f2b95af"
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: docker-registry
  local:
    path: /mnt/docker-registry/07db1e5c-03eb-4e08-b02e-9bc04f2b95af
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - mico
